{
  "_id" : "regexpp",
  "_rev" : "7-75490e24e70dfd1455a6942e26e66876",
  "name" : "regexpp",
  "description" : "Regular expression parser for ECMAScript 2018.",
  "dist-tags" : {
    "next" : "2.0.0-beta.0",
    "latest" : "2.0.1"
  },
  "versions" : {
    "2.0.0" : {
      "name" : "regexpp",
      "description" : "Regular expression parser for ECMAScript 2018.",
      "version" : "2.0.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mysticatea/regexpp.git"
      },
      "engines" : {
        "node" : ">=6.5.0"
      },
      "main" : "index",
      "dist" : {
        "tarball" : "http://10.1.101.2:8081/artifactory/api/npm/sovos-npm-virtual/regexpp/-/regexpp-2.0.0.tgz",
        "shasum" : "b2a7534a85ca1b033bcf5ce9ff8e56d4e0755365"
      },
      "dependencies" : {
      },
      "devDependencies" : {
        "@types/eslint" : "^4.16.2",
        "@types/mocha" : "^5.2.2",
        "@types/node" : "^10.3.3",
        "coveralls" : "^3.0.1",
        "dts-bundle" : "^0.7.3",
        "eslint" : "^4.19.1",
        "eslint-plugin-mysticatea" : "^5.0.0-beta.15",
        "mocha" : "^5.2.0",
        "npm-run-all" : "^4.1.3",
        "nyc" : "^12.0.2",
        "rimraf" : "^2.6.2",
        "rollup" : "^0.60.7",
        "rollup-plugin-node-resolve" : "^3.3.0",
        "rollup-plugin-sourcemaps" : "^0.4.2",
        "rollup-watch" : "^4.3.1",
        "ts-node" : "^6.1.1",
        "typescript" : "^2.9.2",
        "typescript-eslint-parser" : "^16.0.0"
      },
      "license" : "MIT",
      "files" : [ "index.*" ],
      "directories" : {
      },
      "scripts" : {
        "prebuild" : "npm run -s clean",
        "build" : "run-s build:*",
        "build:tsc" : "tsc --module es2015",
        "build:rollup" : "rollup -c",
        "build:dts" : "dts-bundle --name regexpp --main .temp/index.d.ts --out ../index.d.ts",
        "clean" : "rimraf .temp index.*",
        "coveralls" : "nyc report --reporter=text-lcov | coveralls",
        "lint" : "eslint scripts src test --ext .ts",
        "pretest" : "run-s build lint",
        "test" : "nyc _mocha \"test/*.ts\" --reporter dot --timeout 10000",
        "update:test" : "ts-node scripts/update-fixtures.ts",
        "update:ids" : "ts-node scripts/update-unicode-ids.ts",
        "preversion" : "npm test",
        "version" : "npm run -s build",
        "postversion" : "git push && git push --tags",
        "prewatch" : "npm run -s clean",
        "watch" : "_mocha \"test/*.ts\" --require ts-node/register --reporter dot --timeout 10000 --watch-extensions .ts --watch --growl"
      },
      "_npmVersion" : "6.1.0",
      "_npmUser" : {
        "name" : "mysticatea",
        "email" : "star.ctor@gmail.com"
      },
      "_id" : "regexpp@2.0.0",
      "gitHead" : "813344e7f2d08f4ab729df57da5cd56c022c7417",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/regexpp_2.0.0_1529756501513_0.18740514059504432"
      },
      "_nodeVersion" : "10.4.0"
    },
    "2.0.1" : {
      "name" : "regexpp",
      "description" : "Regular expression parser for ECMAScript 2018.",
      "version" : "2.0.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mysticatea/regexpp.git"
      },
      "engines" : {
        "node" : ">=6.5.0"
      },
      "main" : "index",
      "dist" : {
        "tarball" : "http://10.1.101.2:8081/artifactory/api/npm/sovos-npm-virtual/regexpp/-/regexpp-2.0.1.tgz",
        "shasum" : "8d19d31cf632482b589049f8281f93dbcba4d07f"
      },
      "dependencies" : {
      },
      "devDependencies" : {
        "@types/eslint" : "^4.16.2",
        "@types/mocha" : "^5.2.2",
        "@types/node" : "^10.3.3",
        "coveralls" : "^3.0.1",
        "dts-bundle" : "^0.7.3",
        "eslint" : "^4.19.1",
        "eslint-plugin-mysticatea" : "^5.0.0-beta.15",
        "mocha" : "^5.2.0",
        "npm-run-all" : "^4.1.3",
        "nyc" : "^12.0.2",
        "rimraf" : "^2.6.2",
        "rollup" : "^0.60.7",
        "rollup-plugin-node-resolve" : "^3.3.0",
        "rollup-plugin-sourcemaps" : "^0.4.2",
        "rollup-watch" : "^4.3.1",
        "ts-node" : "^6.1.1",
        "typescript" : "^2.9.2",
        "typescript-eslint-parser" : "^16.0.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "prebuild" : "npm run -s clean",
        "build" : "run-s build:*",
        "build:tsc" : "tsc --module es2015",
        "build:rollup" : "rollup -c",
        "build:dts" : "dts-bundle --name regexpp --main .temp/index.d.ts --out ../index.d.ts",
        "clean" : "rimraf .temp index.*",
        "coveralls" : "nyc report --reporter=text-lcov | coveralls",
        "lint" : "eslint scripts src test --ext .ts",
        "pretest" : "run-s build lint",
        "test" : "nyc _mocha \"test/*.ts\" --reporter dot --timeout 10000",
        "update:test" : "ts-node scripts/update-fixtures.ts",
        "update:ids" : "ts-node scripts/update-unicode-ids.ts",
        "preversion" : "npm test",
        "version" : "npm run -s build",
        "postversion" : "git push && git push --tags",
        "prewatch" : "npm run -s clean",
        "watch" : "_mocha \"test/*.ts\" --require ts-node/register --reporter dot --timeout 10000 --watch-extensions .ts --watch --growl"
      },
      "_npmVersion" : "6.2.0",
      "_npmUser" : {
        "name" : "mysticatea",
        "email" : "star.ctor@gmail.com"
      },
      "_id" : "regexpp@2.0.1",
      "gitHead" : "d68b435cbf6d37e3fa6af186965a7b6c738bf685",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/regexpp_2.0.1_1538732295013_0.4707850604874946"
      },
      "_nodeVersion" : "10.11.0"
    },
    "2.0.0-beta.0" : {
      "name" : "regexpp",
      "description" : "Regular expression parser for ECMAScript 2018.",
      "version" : "2.0.0-beta.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mysticatea/regexpp.git"
      },
      "engines" : {
        "node" : ">=6.5.0"
      },
      "main" : "index",
      "dist" : {
        "tarball" : "http://10.1.101.2:8081/artifactory/api/npm/sovos-npm-virtual/regexpp/-/regexpp-2.0.0-beta.0.tgz",
        "shasum" : "14d47dec39c4cd37090a12ac243fc981b73b63df"
      },
      "dependencies" : {
      },
      "devDependencies" : {
        "@types/eslint" : "^4.16.2",
        "@types/mocha" : "^5.2.2",
        "@types/node" : "^10.3.3",
        "coveralls" : "^3.0.1",
        "dts-bundle" : "^0.7.3",
        "eslint" : "^4.19.1",
        "eslint-plugin-mysticatea" : "^5.0.0-beta.15",
        "mocha" : "^5.2.0",
        "npm-run-all" : "^4.1.3",
        "nyc" : "^12.0.2",
        "rimraf" : "^2.6.2",
        "rollup" : "^0.60.7",
        "rollup-plugin-node-resolve" : "^3.3.0",
        "rollup-plugin-sourcemaps" : "^0.4.2",
        "rollup-watch" : "^4.3.1",
        "ts-node" : "^6.1.1",
        "typescript" : "^2.9.2",
        "typescript-eslint-parser" : "^16.0.0"
      },
      "license" : "MIT",
      "files" : [ "index.*" ],
      "directories" : {
      },
      "scripts" : {
        "prebuild" : "npm run -s clean",
        "build" : "run-s build:*",
        "build:tsc" : "tsc --module es2015",
        "build:rollup" : "rollup -c",
        "build:dts" : "dts-bundle --name regexpp --main .temp/index.d.ts --out ../index.d.ts",
        "clean" : "rimraf .temp index.*",
        "coveralls" : "nyc report --reporter=text-lcov | coveralls",
        "lint" : "eslint scripts src test --ext .ts",
        "pretest" : "run-s build lint",
        "test" : "nyc _mocha \"test/*.ts\" --reporter dot --timeout 10000",
        "update:test" : "ts-node scripts/update-fixtures.ts",
        "update:ids" : "ts-node scripts/update-unicode-ids.ts",
        "preversion" : "npm test",
        "version" : "npm run -s build",
        "postversion" : "git push && git push --tags",
        "prewatch" : "npm run -s clean",
        "watch" : "_mocha \"test/*.ts\" --require ts-node/register --reporter dot --timeout 10000 --watch-extensions .ts --watch --growl"
      },
      "_npmVersion" : "6.1.0",
      "_npmUser" : {
        "name" : "mysticatea",
        "email" : "star.ctor@gmail.com"
      },
      "_id" : "regexpp@2.0.0-beta.0",
      "gitHead" : "3938ad4f7d7d64618a89fe9476587cd5f4c14af5",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/regexpp_2.0.0-beta.0_1529565224684_0.0593522495032206"
      },
      "readme" : "# regexpp\n\n[![npm version](https://img.shields.io/npm/v/regexpp.svg)](https://www.npmjs.com/package/regexpp)\n[![Downloads/month](https://img.shields.io/npm/dm/regexpp.svg)](http://www.npmtrends.com/regexpp)\n[![Build Status](https://travis-ci.org/mysticatea/regexpp.svg?branch=master)](https://travis-ci.org/mysticatea/regexpp)\n[![Coverage Status](https://coveralls.io/repos/github/mysticatea/regexpp/badge.svg)](https://coveralls.io/github/mysticatea/regexpp)\n[![Dependency Status](https://david-dm.org/mysticatea/regexpp.svg)](https://david-dm.org/mysticatea/regexpp)\n\nThe regular expression parser for ECMAScript.\n\n## \uD83D\uDCBF Installation\n\n```bash\n$ npm install regexpp\n```\n\n- require Node.js 6.5.0 or newer.\n\n## \uD83D\uDCD6 Usage\n\n```ts\nimport {\n    AST,\n    RegExpParser,\n    RegExpValidator,\n    RegExpVisitor,\n    parseRegExpLiteral,\n    validateRegExpLiteral,\n    visitRegExpAST\n} from \"regexpp\"\n```\n\n### parseRegExpLiteral(source, options?)\n\nParse a given regular expression literal then make AST object.\n\nThis is equivalent to `new RegExpParser(options).parseLiteral(source)`.\n\n- **Parameters:**\n    - `source` (`string | RegExp`) The source code to parse.\n    - `options?` ([`RegExpParser.Options`]) The options to parse.\n- **Return:**\n    - The AST of the regular expression.\n\n### validateRegExpLiteral(source, options?)\n\nValidate a given regular expression literal.\n\nThis is equivalent to `new RegExpValidator(options).validateLiteral(source)`.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `options?` ([`RegExpValidator.Options`]) The options to validate.\n\n### visitRegExpAST(ast, handlers)\n\nVisit each node of a given AST.\n\nThis is equivalent to `new RegExpVisitor(handlers).visit(ast)`.\n\n- **Parameters:**\n    - `ast` ([`AST.Node`]) The AST to visit.\n    - `handlers` ([`RegExpVisitor.Handlers`]) The callbacks.\n\n### RegExpParser\n\n#### new RegExpParser(options?)\n\n- **Parameters:**\n    - `options?` ([`RegExpParser.Options`]) The options to parse.\n\n#### parser.parseLiteral(source, start?, end?)\n\nParse a regular expression literal.\n\n- **Parameters:**\n    - `source` (`string`) The source code to parse. E.g. `\"/abc/g\"`.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n- **Return:**\n    - The AST of the regular expression.\n\n#### parser.parsePattern(source, start?, end?, uFlag?)\n\nParse a regular expression pattern.\n\n- **Parameters:**\n    - `source` (`string`) The source code to parse. E.g. `\"abc\"`.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n    - `uFlag?` (`boolean`) The flag to enable Unicode mode.\n- **Return:**\n    - The AST of the regular expression pattern.\n\n#### parser.parseFlags(source, start?, end?)\n\nParse a regular expression flags.\n\n- **Parameters:**\n    - `source` (`string`) The source code to parse. E.g. `\"gim\"`.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n- **Return:**\n    - The AST of the regular expression flags.\n\n### RegExpValidator\n\n#### new RegExpValidator(options)\n\n- **Parameters:**\n    - `options` ([`RegExpValidator.Options`]) The options to validate.\n\n#### validator.validateLiteral(source, start, end)\n\nValidate a regular expression literal.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n\n#### validator.validatePattern(source, start, end, uFlag)\n\nValidate a regular expression pattern.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n    - `uFlag?` (`boolean`) The flag to enable Unicode mode.\n\n#### validator.validateFlags(source, start, end)\n\nValidate a regular expression flags.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n\n### RegExpVisitor\n\n#### new RegExpVisitor(handlers)\n\n- **Parameters:**\n    - `handlers` ([`RegExpVisitor.Handlers`]) The callbacks.\n\n#### visitor.visit(ast)\n\nValidate a regular expression literal.\n\n- **Parameters:**\n    - `ast` ([`AST.Node`]) The AST to visit.\n\n## \uD83D\uDCF0 Changelog\n\n- [GitHub Releases](https://github.com/mysticatea/regexpp/releases)\n\n## \uD83C\uDF7B Contributing\n\nWelcome contributing!\n\nPlease use GitHub's Issues/PRs.\n\n### Development Tools\n\n- `npm test` runs tests and measures coverage.\n- `npm run build` compiles TypeScript source code to `index.js`, `index.js.map`, and `index.d.ts`.\n- `npm run clean` removes the temporary files which are created by `npm test` and `npm run build`.\n- `npm run lint` runs ESLint.\n- `npm run update:test` updates test fixtures.\n- `npm run update:ids` updates `src/unicode/ids.ts`.\n- `npm run watch` runs tests with `--watch` option.\n\n[`AST.Node`]: src/ast.ts#L4\n[`RegExpParser.Options`]: src/parser.ts#L539\n[`RegExpValidator.Options`]: src/validator.ts#L127\n[`RegExpVisitor.Handlers`]: src/visitor.ts#L204\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "10.4.0"
    },
    "1.0.0" : {
      "name" : "regexpp",
      "description" : "Regular expression parser for ECMAScript 2018.",
      "version" : "1.0.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mysticatea/regexpp.git"
      },
      "engines" : {
        "node" : ">=4.0.0"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "http://10.1.101.2:8081/artifactory/api/npm/sovos-npm-virtual/regexpp/-/regexpp-1.0.0.tgz",
        "shasum" : "4bdc81199247f4a0109444e1f6273baa8ea0a5ee"
      },
      "devDependencies" : {
        "@types/eslint" : "^4.16.0",
        "@types/mocha" : "^2.2.48",
        "@types/node" : "^9.4.6",
        "dts-bundle" : "^0.7.3",
        "eslint" : "^4.18.0",
        "eslint-config-mysticatea" : "^13.0.2",
        "eslint-config-prettier" : "^2.9.0",
        "eslint-plugin-prettier" : "^2.4.0",
        "mocha" : "^5.0.1",
        "npm-run-all" : "^4.1.2",
        "prettier" : "^1.9.2",
        "rollup" : "^0.56.1",
        "rollup-plugin-node-resolve" : "^3.0.3",
        "rollup-plugin-sourcemaps" : "^0.4.2",
        "rollup-watch" : "^4.3.1",
        "ts-node" : "^5.0.0",
        "typescript" : "^2.7.2",
        "typescript-eslint-parser" : "^14.0.0"
      },
      "license" : "MIT",
      "files" : [ "index.d.ts", "index.js.map" ],
      "directories" : {
      },
      "scripts" : {
        "prebuild" : "npm run -s clean",
        "build" : "tsc --project tsconfig.prod.json && rollup -c -o index.js && dts-bundle --name regexpp --main .temp/index.d.ts --out ../index.d.ts",
        "clean" : "rimraf .temp index.*",
        "lint" : "eslint src test tools --ext .ts",
        "pretest" : "run-s build lint",
        "test" : "_mocha --require ts-node/register --reporter dot --timeout 10000 \"test/*.ts\"",
        "update:test" : "ts-node tools/update-fixtures.ts",
        "update:ids" : "ts-node tools/update-unicode-ids.ts",
        "preversion" : "npm test",
        "version" : "npm run -s build",
        "postversion" : "git push && git push --tags",
        "prewatch" : "npm run -s clean",
        "watch" : "npm run -s test -- --watch-extensions .ts --watch --growl"
      },
      "_npmVersion" : "5.7.1",
      "_npmUser" : {
        "name" : "mysticatea",
        "email" : "star.ctor@gmail.com"
      },
      "_id" : "regexpp@1.0.0",
      "gitHead" : "cc2aa524c952a5c7e5f9c5c9b6cdcd2868fa6b4c",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/regexpp_1.0.0_1520249334973_0.6225448336418906"
      },
      "_nodeVersion" : "8.9.3"
    },
    "0.0.0" : {
      "name" : "regexpp",
      "description" : "RegExp parser.",
      "version" : "0.0.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mysticatea/regexpp.git"
      },
      "engines" : {
        "node" : ">=4.0.0"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "http://10.1.101.2:8081/artifactory/api/npm/sovos-npm-virtual/regexpp/-/regexpp-0.0.0.tgz",
        "shasum" : "6681c892b2494e530fd4c93f44b8de32ae0bfb18"
      },
      "devDependencies" : {
        "@types/mocha" : "^2.2.48",
        "@types/node" : "^9.4.6",
        "dts-bundle" : "^0.7.3",
        "eslint" : "^4.18.0",
        "eslint-config-mysticatea" : "^13.0.2",
        "eslint-config-prettier" : "^2.9.0",
        "eslint-plugin-prettier" : "^2.4.0",
        "mocha" : "^5.0.1",
        "npm-run-all" : "^4.1.2",
        "nyc" : "^11.4.1",
        "opener" : "^1.4.3",
        "prettier" : "^1.9.2",
        "rollup" : "^0.56.1",
        "rollup-plugin-node-resolve" : "^3.0.3",
        "rollup-plugin-sourcemaps" : "^0.4.2",
        "rollup-watch" : "^4.3.1",
        "ts-node" : "^5.0.0",
        "typescript" : "^2.8.0-dev.20180228",
        "typescript-eslint-parser" : "^14.0.0",
        "wait-on" : "^2.1.0",
        "warun" : "^1.0.0"
      },
      "license" : "MIT",
      "files" : [ "index.d.ts", "index.js.map" ],
      "directories" : {
      },
      "scripts" : {
        "_mocha" : "_mocha --require ts-node/register --reporter dot --timeout 10000 \"test/*.js\"",
        "prebuild" : "npm run -s clean",
        "build" : "tsc --project tsconfig.prod.json && rollup -c -o index.js && dts-bundle --name regexpp --main .temp/index.d.ts --out ../index.d.ts",
        "clean" : "rimraf .nyc_output .temp coverage index.*",
        "codecov" : "nyc report --reporter lcovonly && codecov",
        "coverage" : "nyc report --reporter lcov && opener ./coverage/lcov-report/index.html",
        "lint" : "eslint src test --ext .ts",
        "setup" : "git submodule update --init && cd test/fixtures/eslint && npm install",
        "pretest" : "run-s build lint",
        "test" : "nyc npm run _mocha",
        "preversion" : "npm test",
        "version" : "npm run -s build",
        "postversion" : "git push && git push --tags",
        "prewatch" : "npm run -s clean",
        "update:fixtures" : "ts-node test/tools/update-fixtures.ts",
        "watch" : "run-p watch:*",
        "watch:tsc" : "tsc --watch",
        "watch:rollup" : "wait-on .temp/index.js && rollup -c -o index.js --watch",
        "watch:test" : "wait-on index.js && warun index.js \"test/*.ts\" --debounce 1000 --no-initial -- nyc -r lcov npm run -s _mocha",
        "watch:coverage-report" : "wait-on coverage/lcov-report/index.html && opener coverage/lcov-report/index.html"
      },
      "_npmVersion" : "5.6.0",
      "_npmUser" : {
        "name" : "mysticatea",
        "email" : "star.ctor@gmail.com"
      },
      "_id" : "regexpp@0.0.0",
      "gitHead" : "c3af648a9f7f66ca025bbb338e039340d1a1cadb",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/regexpp_0.0.0_1519813031685_0.46808276769335033"
      },
      "_nodeVersion" : "8.9.3"
    },
    "1.0.1" : {
      "name" : "regexpp",
      "description" : "Regular expression parser for ECMAScript 2018.",
      "version" : "1.0.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mysticatea/regexpp.git"
      },
      "engines" : {
        "node" : ">=4.0.0"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "http://10.1.101.2:8081/artifactory/api/npm/sovos-npm-virtual/regexpp/-/regexpp-1.0.1.tgz",
        "shasum" : "d857c3a741dce075c2848dcb019a0a975b190d43"
      },
      "devDependencies" : {
        "@types/eslint" : "^4.16.0",
        "@types/mocha" : "^2.2.48",
        "@types/node" : "^9.4.6",
        "dts-bundle" : "^0.7.3",
        "eslint" : "^4.18.0",
        "eslint-config-mysticatea" : "^13.0.2",
        "eslint-config-prettier" : "^2.9.0",
        "eslint-plugin-prettier" : "^2.4.0",
        "mocha" : "^5.0.1",
        "npm-run-all" : "^4.1.2",
        "prettier" : "^1.9.2",
        "rimraf" : "^2.6.2",
        "rollup" : "^0.56.1",
        "rollup-plugin-node-resolve" : "^3.0.3",
        "rollup-plugin-sourcemaps" : "^0.4.2",
        "rollup-watch" : "^4.3.1",
        "ts-node" : "^5.0.0",
        "typescript" : "^2.7.2",
        "typescript-eslint-parser" : "^14.0.0"
      },
      "license" : "MIT",
      "files" : [ "index.d.ts", "index.js.map" ],
      "directories" : {
      },
      "scripts" : {
        "prebuild" : "npm run -s clean",
        "build" : "tsc --project tsconfig.prod.json && rollup -c -o index.js && dts-bundle --name regexpp --main .temp/index.d.ts --out ../index.d.ts",
        "clean" : "rimraf .temp index.*",
        "lint" : "eslint src test tools --ext .ts",
        "pretest" : "run-s build lint",
        "test" : "_mocha --require ts-node/register --reporter dot --timeout 10000 \"test/*.ts\"",
        "update:test" : "ts-node tools/update-fixtures.ts",
        "update:ids" : "ts-node tools/update-unicode-ids.ts",
        "preversion" : "npm test",
        "version" : "npm run -s build",
        "postversion" : "git push && git push --tags",
        "prewatch" : "npm run -s clean",
        "watch" : "npm run -s test -- --watch-extensions .ts --watch --growl"
      },
      "_npmVersion" : "5.7.1",
      "_npmUser" : {
        "name" : "mysticatea",
        "email" : "star.ctor@gmail.com"
      },
      "_id" : "regexpp@1.0.1",
      "gitHead" : "46c894e4c842d4cefda0ff827f962586e2e0395a",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/regexpp_1.0.1_1520343616447_0.3437533717937047"
      },
      "_nodeVersion" : "4.8.7"
    },
    "1.1.0" : {
      "name" : "regexpp",
      "description" : "Regular expression parser for ECMAScript 2018.",
      "version" : "1.1.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mysticatea/regexpp.git"
      },
      "engines" : {
        "node" : ">=4.0.0"
      },
      "main" : "index",
      "dist" : {
        "tarball" : "http://10.1.101.2:8081/artifactory/api/npm/sovos-npm-virtual/regexpp/-/regexpp-1.1.0.tgz",
        "shasum" : "0e3516dd0b7904f413d2d4193dce4618c3a689ab"
      },
      "dependencies" : {
      },
      "devDependencies" : {
        "@types/eslint" : "^4.16.0",
        "@types/mocha" : "^2.2.48",
        "@types/node" : "^9.4.6",
        "babel-core" : "^6.26.0",
        "babel-plugin-transform-es2015-destructuring" : "^6.23.0",
        "babel-plugin-transform-es2015-parameters" : "^6.24.1",
        "babel-plugin-transform-es2015-spread" : "^6.22.0",
        "dts-bundle" : "^0.7.3",
        "eslint" : "^4.18.0",
        "eslint-config-mysticatea" : "^13.0.2",
        "eslint-config-prettier" : "^2.9.0",
        "eslint-plugin-prettier" : "^2.4.0",
        "mocha" : "^5.0.1",
        "npm-run-all" : "^4.1.2",
        "prettier" : "^1.9.2",
        "rimraf" : "^2.6.2",
        "rollup" : "^0.56.1",
        "rollup-plugin-babel" : "^3.0.3",
        "rollup-plugin-node-resolve" : "^3.0.3",
        "rollup-plugin-sourcemaps" : "^0.4.2",
        "rollup-watch" : "^4.3.1",
        "ts-node" : "^5.0.0",
        "typescript" : "^2.7.2",
        "typescript-eslint-parser" : "^14.0.0"
      },
      "license" : "MIT",
      "files" : [ "index.*" ],
      "directories" : {
      },
      "scripts" : {
        "prebuild" : "npm run -s clean",
        "build" : "run-s build:*",
        "build:tsc" : "tsc --module es2015 --target es2015",
        "build:mjs" : "rollup -c rollup-mjs.config.js",
        "build:js" : "rollup -c rollup-js.config.js",
        "build:dts" : "dts-bundle --name regexpp --main .temp/index.d.ts --out ../index.d.ts",
        "clean" : "rimraf .temp index.*",
        "lint" : "eslint src test tools --ext .ts",
        "pretest" : "run-s build lint",
        "test" : "_mocha --require ts-node/register --reporter dot --timeout 10000 \"test/*.ts\"",
        "update:test" : "ts-node tools/update-fixtures.ts",
        "update:ids" : "ts-node tools/update-unicode-ids.ts",
        "preversion" : "npm test",
        "version" : "npm run -s build",
        "postversion" : "git push && git push --tags",
        "prewatch" : "npm run -s clean",
        "watch" : "npm run -s test -- --watch-extensions .ts --watch --growl"
      },
      "_npmVersion" : "5.8.0",
      "_npmUser" : {
        "name" : "mysticatea",
        "email" : "star.ctor@gmail.com"
      },
      "_id" : "regexpp@1.1.0",
      "gitHead" : "258651ef294c23faaa4bc25861a9e77c21136c48",
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/regexpp_1.1.0_1522403159299_0.2810022828991172"
      },
      "_nodeVersion" : "8.11.1"
    }
  },
  "readme" : "# regexpp\n\n[![npm version](https://img.shields.io/npm/v/regexpp.svg)](https://www.npmjs.com/package/regexpp)\n[![Downloads/month](https://img.shields.io/npm/dm/regexpp.svg)](http://www.npmtrends.com/regexpp)\n[![Build Status](https://travis-ci.org/mysticatea/regexpp.svg?branch=master)](https://travis-ci.org/mysticatea/regexpp)\n[![Coverage Status](https://coveralls.io/repos/github/mysticatea/regexpp/badge.svg)](https://coveralls.io/github/mysticatea/regexpp)\n[![Dependency Status](https://david-dm.org/mysticatea/regexpp.svg)](https://david-dm.org/mysticatea/regexpp)\n\nThe regular expression parser for ECMAScript.\n\n## \uD83D\uDCBF Installation\n\n```bash\n$ npm install regexpp\n```\n\n- require Node.js 6.5.0 or newer.\n\n## \uD83D\uDCD6 Usage\n\n```ts\nimport {\n    AST,\n    RegExpParser,\n    RegExpValidator,\n    RegExpVisitor,\n    parseRegExpLiteral,\n    validateRegExpLiteral,\n    visitRegExpAST\n} from \"regexpp\"\n```\n\n### parseRegExpLiteral(source, options?)\n\nParse a given regular expression literal then make AST object.\n\nThis is equivalent to `new RegExpParser(options).parseLiteral(source)`.\n\n- **Parameters:**\n    - `source` (`string | RegExp`) The source code to parse.\n    - `options?` ([`RegExpParser.Options`]) The options to parse.\n- **Return:**\n    - The AST of the regular expression.\n\n### validateRegExpLiteral(source, options?)\n\nValidate a given regular expression literal.\n\nThis is equivalent to `new RegExpValidator(options).validateLiteral(source)`.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `options?` ([`RegExpValidator.Options`]) The options to validate.\n\n### visitRegExpAST(ast, handlers)\n\nVisit each node of a given AST.\n\nThis is equivalent to `new RegExpVisitor(handlers).visit(ast)`.\n\n- **Parameters:**\n    - `ast` ([`AST.Node`]) The AST to visit.\n    - `handlers` ([`RegExpVisitor.Handlers`]) The callbacks.\n\n### RegExpParser\n\n#### new RegExpParser(options?)\n\n- **Parameters:**\n    - `options?` ([`RegExpParser.Options`]) The options to parse.\n\n#### parser.parseLiteral(source, start?, end?)\n\nParse a regular expression literal.\n\n- **Parameters:**\n    - `source` (`string`) The source code to parse. E.g. `\"/abc/g\"`.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n- **Return:**\n    - The AST of the regular expression.\n\n#### parser.parsePattern(source, start?, end?, uFlag?)\n\nParse a regular expression pattern.\n\n- **Parameters:**\n    - `source` (`string`) The source code to parse. E.g. `\"abc\"`.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n    - `uFlag?` (`boolean`) The flag to enable Unicode mode.\n- **Return:**\n    - The AST of the regular expression pattern.\n\n#### parser.parseFlags(source, start?, end?)\n\nParse a regular expression flags.\n\n- **Parameters:**\n    - `source` (`string`) The source code to parse. E.g. `\"gim\"`.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n- **Return:**\n    - The AST of the regular expression flags.\n\n### RegExpValidator\n\n#### new RegExpValidator(options)\n\n- **Parameters:**\n    - `options` ([`RegExpValidator.Options`]) The options to validate.\n\n#### validator.validateLiteral(source, start, end)\n\nValidate a regular expression literal.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n\n#### validator.validatePattern(source, start, end, uFlag)\n\nValidate a regular expression pattern.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n    - `uFlag?` (`boolean`) The flag to enable Unicode mode.\n\n#### validator.validateFlags(source, start, end)\n\nValidate a regular expression flags.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n\n### RegExpVisitor\n\n#### new RegExpVisitor(handlers)\n\n- **Parameters:**\n    - `handlers` ([`RegExpVisitor.Handlers`]) The callbacks.\n\n#### visitor.visit(ast)\n\nValidate a regular expression literal.\n\n- **Parameters:**\n    - `ast` ([`AST.Node`]) The AST to visit.\n\n## \uD83D\uDCF0 Changelog\n\n- [GitHub Releases](https://github.com/mysticatea/regexpp/releases)\n\n## \uD83C\uDF7B Contributing\n\nWelcome contributing!\n\nPlease use GitHub's Issues/PRs.\n\n### Development Tools\n\n- `npm test` runs tests and measures coverage.\n- `npm run build` compiles TypeScript source code to `index.js`, `index.js.map`, and `index.d.ts`.\n- `npm run clean` removes the temporary files which are created by `npm test` and `npm run build`.\n- `npm run lint` runs ESLint.\n- `npm run update:test` updates test fixtures.\n- `npm run update:ids` updates `src/unicode/ids.ts`.\n- `npm run watch` runs tests with `--watch` option.\n\n[`AST.Node`]: src/ast.ts#L4\n[`RegExpParser.Options`]: src/parser.ts#L539\n[`RegExpValidator.Options`]: src/validator.ts#L127\n[`RegExpVisitor.Handlers`]: src/visitor.ts#L204\n",
  "time" : {
    "2.0.0" : "2018-06-23T12:21:41.579Z",
    "2.0.1" : "2018-10-05T09:38:15.306Z",
    "2.0.0-beta.0" : "2018-06-21T07:13:44.761Z",
    "created" : "2018-02-28T10:17:11.684Z",
    "modified" : "2019-01-05T09:11:09.909Z",
    "1.0.0" : "2018-03-05T11:28:55.155Z",
    "0.0.0" : "2018-02-28T10:17:11.737Z",
    "1.0.1" : "2018-03-06T13:40:16.526Z",
    "1.1.0" : "2018-03-30T09:45:59.374Z"
  },
  "repository" : {
    "type" : "git",
    "url" : "git+https://github.com/mysticatea/regexpp.git"
  },
  "users" : {
  },
  "readmeFilename" : "README.md",
  "license" : "MIT"
}